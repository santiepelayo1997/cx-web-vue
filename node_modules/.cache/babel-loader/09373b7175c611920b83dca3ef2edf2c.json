{"remainingRequest":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\src\\components\\Loader.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\src\\components\\Loader.vue","mtime":1586240069823},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\iRipple\\\\Desktop\\\\cx-web-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\iRipple\\\\Desktop\\\\cx-web-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { setInterval, clearInterval } from 'timers';\nimport { mapActions } from 'vuex'; //const localStorage = window.localStorage;\n\nexport default {\n  name: 'Loader',\n  mounted: function mounted() {\n    try {\n      clearInterval(this.retryInteval);\n    } catch (e) {\n      console.log(\"No interval to clear\");\n    }\n\n    if (this.$store.getters.hasAccess(this.apiModel, 'list', '*')) this.apiSync();\n  },\n  data: function data() {\n    return {\n      currentPage: 0,\n      totalPages: 0,\n      loadingMessage: 'Loading',\n      showRetry: false,\n      retryCountdown: null,\n      retryInterval: null\n    };\n  },\n  props: {\n    apiModel: String,\n    indexedFilter: Object\n  },\n  methods: _objectSpread({\n    skipSync: function skipSync() {\n      this.$emit(\"doneLoading\");\n    },\n    retrySync: function retrySync() {\n      var _this = this;\n\n      if (this.retryCountdown >= 0) {\n        try {\n          clearInterval(this.retryInterval);\n        } catch (e) {\n          console.log(\"Problem clearing interval\");\n        }\n\n        this.retryCountdown = 3;\n        this.loadingMessage = 'Retrying in ' + this.retryCountdown + \" seconds\";\n        this.retryInterval = setInterval(function () {\n          _this.retryCountdown--;\n          _this.loadingMessage = 'Retrying in ' + _this.retryCountdown + \" seconds\";\n        }, 1000);\n      }\n    }\n  }, mapActions(['cloudLastUpdatedAt', 'getUpdateCount', 'getRequest']), {\n    apiSync: function () {\n      var _apiSync = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var clua, lua, dclua, dlua, dnow, _dnow, icount, successFlag, i, objArr;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //check last updated at\n                this.showRetry = false;\n                this.loadingMessage = 'Loading';\n                this.currentPage = 0;\n                _context.prev = 3;\n                _context.next = 6;\n                return this.cloudLastUpdatedAt({\n                  \"endpoint\": this.apiModel,\n                  \"urlParams\": this.filters\n                });\n\n              case 6:\n                clua = _context.sent;\n                _context.next = 9;\n                return this.$store.getters.lastUpdatedAtUtc(this.apiModel);\n\n              case 9:\n                lua = _context.sent;\n                dclua = Date.parse(clua);\n                dlua = Date.parse(lua);\n                dnow = Date.now();\n\n                if (!(dclua > dlua)) {\n                  _context.next = 42;\n                  break;\n                }\n\n                //there's an update\n                _dnow = Date.now();\n                _context.next = 17;\n                return this.getUpdateCount({\n                  \"endpoint\": this.apiModel,\n                  \"urlParams\": _objectSpread({}, this.filters, {\n                    \"after\": new Date(dlua).toISOString(),\n                    \"to\": new Date(_dnow).toISOString()\n                  })\n                });\n\n              case 17:\n                icount = _context.sent;\n\n                if (icount == -1) {\n                  this.loadingMessage = \"An error occurred while downloading list of accounts.\";\n                }\n\n                this.totalPages = Math.ceil(icount / 50);\n                successFlag = true;\n                i = 1;\n\n              case 22:\n                if (!(i <= this.totalPages)) {\n                  _context.next = 39;\n                  break;\n                }\n\n                this.currentPage = i;\n                _context.next = 26;\n                return this.getRequest({\n                  \"endpoint\": this.apiModel,\n                  \"urlParams\": _objectSpread({}, this.filters, {\n                    \"page\": i,\n                    \"after\": new Date(dlua).toISOString(),\n                    \"to\": new Date(_dnow).toISOString()\n                  })\n                });\n\n              case 26:\n                objArr = _context.sent;\n\n                if (!(objArr.status != 200)) {\n                  _context.next = 31;\n                  break;\n                }\n\n                successFlag = false;\n                _context.next = 34;\n                break;\n\n              case 31:\n                console.log(objArr.data);\n                _context.next = 34;\n                return this.$store.state.db[this.apiModel].bulkPut(objArr.data).then(function () {\n                  console.log(\"updated page \" + _this2.currentPage);\n                }).catch(function (err) {\n                  console.log(\"error:\" + err);\n                });\n\n              case 34:\n                if (successFlag) {\n                  _context.next = 36;\n                  break;\n                }\n\n                return _context.abrupt(\"break\", 39);\n\n              case 36:\n                i++;\n                _context.next = 22;\n                break;\n\n              case 39:\n                if (successFlag) {\n                  this.$store.getters.updateLocalTimestamp(this.apiModel, new Date(_dnow).toISOString());\n                  this.$emit(\"doneLoading\");\n                } else {\n                  this.showRetry = true;\n                }\n\n                _context.next = 44;\n                break;\n\n              case 42:\n                this.$store.getters.updateLocalTimestamp(this.apiModel, new Date(dnow).toISOString());\n                this.$emit(\"doneLoading\");\n\n              case 44:\n                _context.next = 49;\n                break;\n\n              case 46:\n                _context.prev = 46;\n                _context.t0 = _context[\"catch\"](3);\n                this.showRetry = true;\n\n              case 49:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 46]]);\n      }));\n\n      function apiSync() {\n        return _apiSync.apply(this, arguments);\n      }\n\n      return apiSync;\n    }()\n  }),\n  watch: {\n    showRetry: function showRetry() {\n      if (this.showRetry) this.loadingMessage = \"Error encountered while downloading \" + this.apiModel;\n    },\n    retryCountdown: function retryCountdown() {\n      if (this.retryCountdown <= 0) {\n        clearInterval(this.retryInterval);\n        this.apiSync();\n      }\n    }\n  },\n  computed: {\n    filters: function filters() {\n      if (localStorage.getItem('currentAccount') != null && localStorage.getItem('currentAccount') != undefined && this.apiModel != \"accounts\") {\n        return _objectSpread({\n          \"accountHashId\": localStorage.getItem('currentAccount')\n        }, this.indexedFilter);\n      } else {\n        return this.indexedFilter;\n      }\n    }\n  }\n};",{"version":3,"sources":["Loader.vue"],"names":[],"mappings":"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","sourcesContent":["<template >\r\n    <div class=\"row loader\"  >\r\n        <div class=\"col-md-12\">\r\n            <div class=\"loading-screen text-center\"  >\r\n                <div>\r\n                  <div v-if=\"showRetry\">\r\n                    <button @click=\"retrySync\" class=\"btn btn-sm btn-secondary btn-text-adj\">Retry <i class=\"material-icons btn-adj\">refresh</i></button> &nbsp;\r\n                    <button @click=\"skipSync\" class=\"btn btn-sm btn-warning btn-text-adj\">Skip updating records <i class=\"material-icons btn-adj\">report_problem</i></button>\r\n                  </div>\r\n                  <div v-else class=\"spinner-border\" style=\"width:100px;height:100px\" role=\"status\">\r\n                    <span class=\"sr-only\" >Loading...</span>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n                {{ loadingMessage }}<br>\r\n                <span v-if=\"totalPages >= 1\">\r\n                    {{ currentPage}} of {{ totalPages }}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { setInterval, clearInterval } from 'timers';\r\nimport {mapActions} from 'vuex'\r\n//const localStorage = window.localStorage;\r\n\r\nexport default {\r\n    name: 'Loader',\r\n    mounted() {\r\n            try\r\n            {\r\n                clearInterval(this.retryInteval)\r\n            }\r\n            catch(e)\r\n            {\r\n                console.log(\"No interval to clear\")\r\n            }\r\n            if(this.$store.getters.hasAccess(this.apiModel,'list','*'))\r\n            this.apiSync();\r\n    },\r\n    data: function() {\r\n        return {\r\n            currentPage: 0,\r\n            totalPages: 0,\r\n            loadingMessage: 'Loading',\r\n            showRetry: false,\r\n            retryCountdown: null,\r\n            retryInterval: null,\r\n        }\r\n    },\r\n    props: {\r\n        apiModel: String,\r\n        indexedFilter: Object\r\n    },\r\n    methods: {\r\n        skipSync: function(){\r\n            this.$emit(\"doneLoading\")\r\n        },\r\n        retrySync: function (){\r\n            if(this.retryCountdown >= 0){\r\n                try{\r\n                    clearInterval(this.retryInterval)\r\n                }catch(e){\r\n                    console.log(\"Problem clearing interval\")\r\n                }\r\n                this.retryCountdown = 3\r\n                this.loadingMessage = 'Retrying in '+this.retryCountdown+\" seconds\"\r\n                this.retryInterval = setInterval(() => {\r\n                    this.retryCountdown--;\r\n                    this.loadingMessage = 'Retrying in '+this.retryCountdown+\" seconds\"\r\n                },1000)\r\n            }\r\n        },\r\n        ...mapActions(\r\n            [\r\n                'cloudLastUpdatedAt',\r\n                'getUpdateCount',\r\n                'getRequest'\r\n            ]\r\n        ),\r\n        apiSync: async function() {\r\n\r\n            //check last updated at\r\n            this.showRetry = false\r\n            this.loadingMessage = 'Loading'\r\n            this.currentPage = 0\r\n            try{\r\n         \r\n                let clua = await this.cloudLastUpdatedAt({\"endpoint\": this.apiModel,\"urlParams\": this.filters})\r\n                let lua = await this.$store.getters.lastUpdatedAtUtc(this.apiModel)\r\n            \r\n                let dclua = Date.parse(clua)\r\n                let dlua = Date.parse(lua)\r\n                let dnow = Date.now()\r\n                \r\n                if(dclua > dlua){\r\n                    //there's an update\r\n                    let dnow = Date.now()\r\n                    let icount = await this.getUpdateCount({\"endpoint\": this.apiModel,\"urlParams\": {...this.filters,\"after\": new Date(dlua).toISOString(), \"to\": new Date(dnow).toISOString()}})\r\n                    if(icount == -1){\r\n                        this.loadingMessage = \"An error occurred while downloading list of accounts.\"\r\n                    }\r\n                    this.totalPages = Math.ceil(icount / 50)\r\n                    let successFlag = true\r\n                \r\n                    syncloop: for(var i = 1; i <= this.totalPages; i++){\r\n                        this.currentPage = i\r\n                        let objArr = await this.getRequest({\"endpoint\": this.apiModel,\"urlParams\":{...this.filters,\"page\":i,\"after\": new Date(dlua).toISOString(), \"to\": new Date(dnow).toISOString()}})\r\n                        if(objArr.status != 200){\r\n                            successFlag = false;\r\n                        }else{\r\n                            console.log(objArr.data)\r\n                            await this.$store.state.db[this.apiModel].bulkPut(objArr.data).then(() => {\r\n                                console.log(\"updated page \"+this.currentPage)\r\n                            }).catch((err) => {\r\n                                console.log(\"error:\"+err)\r\n                            })\r\n                        }\r\n                        if(!successFlag){\r\n                            break syncloop;\r\n                        }\r\n                    }\r\n                    if(successFlag){\r\n                        this.$store.getters.updateLocalTimestamp(this.apiModel,new Date(dnow).toISOString())\r\n                        this.$emit(\"doneLoading\")\r\n                    }else{\r\n                        this.showRetry = true\r\n                    }\r\n\r\n                }else{\r\n                 \r\n                    this.$store.getters.updateLocalTimestamp(this.apiModel,new Date(dnow).toISOString())\r\n                    this.$emit(\"doneLoading\")\r\n                }\r\n            }catch(e){\r\n                this.showRetry = true;\r\n            }\r\n\r\n            \r\n        },\r\n    },\r\n    watch:{\r\n        showRetry(){\r\n            if(this.showRetry)\r\n                this.loadingMessage = \"Error encountered while downloading \"+this.apiModel\r\n        },\r\n        retryCountdown(){\r\n            if(this.retryCountdown <= 0){\r\n                clearInterval(this.retryInterval)\r\n                this.apiSync()\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        filters(){\r\n            if(localStorage.getItem('currentAccount') != null && localStorage.getItem('currentAccount') != undefined && this.apiModel != \"accounts\"){\r\n                return {\"accountHashId\": localStorage.getItem('currentAccount'), ...this.indexedFilter}\r\n            }else{\r\n                return this.indexedFilter\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.loading-screen{\r\n    position: absolute;\r\n    padding-top: 200px;\r\n    height: 500px;\r\n    width: 100%;\r\n}\r\n.btn-adj{\r\n    position: relative;\r\n    top: 5px;\r\n}\r\n\r\n.btn-text-adj{\r\n    font-size: 20px;\r\n}\r\n\r\n</style>"],"sourceRoot":"src/components"}]}