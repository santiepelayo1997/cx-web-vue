{"remainingRequest":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\src\\views\\UserGroups.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\src\\views\\UserGroups.vue","mtime":1576633636000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\iRipple\\\\Desktop\\\\cx-web-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Navigation from '@/components/Navigation.vue';\nimport Sidebar from '@/components/Sidebar.vue';\nimport Loader from '@/components/Loader.vue';\nimport TableList from '@/components/TableList.vue';\nimport FormBuilder from '@/components/FormBuilder.vue';\nimport axios from 'axios';\nexport default {\n  name: 'UserGroups',\n  mounted: function mounted() {\n    this.$store.dispatch('getBranches');\n  },\n  data: function data() {\n    return {\n      syncing: true,\n      file: '',\n      showFields: {\n        \"orderBy\": \"updatedAt\",\n        \"orientation\": \"desc\",\n        \"list\": ['name', 'code']\n      },\n      iconButtons: [{\n        name: \"use\",\n        uiName: \"fas fa-pen\",\n        callName: \"retrieveData\",\n        accepting: [\"hashId\"]\n      }, {\n        name: \"use2\",\n        uiName: \"fas fa-times\",\n        callName: \"delete\",\n        accepting: [\"hashId\"]\n      }],\n      btnAdd: [{\n        name: \"btnAdd\",\n        callName: \"btnAddModal\"\n      }],\n      cardButton: [{\n        name: \"use\",\n        uiName: \"Create\",\n        callName: \"postData\",\n        className: \"btn btn-primary\"\n      }],\n      btnClose: [{\n        name: \"btnClose\",\n        uiName: \"Cancel\",\n        callName: \"closeModal\"\n      }],\n      viewButtons: [{\n        name: \"viewUsers\",\n        uiName: \"View Users\",\n        callName: \"useAccount\",\n        accepting: [\"hashId\"]\n      }],\n      form: [{\n        name: \"name\",\n        inputId: \"name\",\n        labelName: \"Name:\",\n        cardInputCol: \"col-md-6\",\n        errorName: \"Please input Name\",\n        ifRequired: true,\n        inputType: \"varchar\"\n      }, {\n        name: \"code\",\n        inputId: \"code\",\n        labelName: \"Code:\",\n        cardInputCol: \"col-md-6\",\n        ifRequired: true,\n        inputType: \"varchar\",\n        errorName: \"Please input Code\"\n      }],\n      uploadTextBox: [{\n        name: \"photoUrl\",\n        labelName: \"Upload Photo:\",\n        cardInputCol: \"col-12\",\n        inputType: \"file\",\n        fileId: \"file\",\n        acceptUpload: \"image/x-png,image/jpeg\"\n      }],\n      cardButtonUpdate: [{\n        name: \"use\",\n        uiName: \"Save\",\n        callName: \"putData\",\n        className: \"btn btn-primary\"\n      }],\n      cardStyle: [{\n        color: '#0B055B'\n      }],\n      iconColor: [{\n        color: '#CBCBCB'\n      }],\n      indexedFilter: {\n        status: \"A\"\n      }\n    };\n  },\n  components: {\n    Navigation: Navigation,\n    Loader: Loader,\n    Sidebar: Sidebar,\n    TableList: TableList,\n    FormBuilder: FormBuilder\n  },\n  methods: {\n    stopSync: function stopSync() {\n      this.syncing = false;\n    },\n    closeModal: function closeModal() {\n      this.$store.state.showModal = false;\n      this.$store.state.showModalUpdate = false;\n      this.$store.state.loading = false;\n      this.showModalUpdate = false;\n    },\n    openModal: function openModal() {\n      this.$store.state.showModal = true;\n    },\n    // async copyUserGroup (hashId){\n    //       this.showModalCopy = true\n    //       let token = await localStorage.getItem(\"apiToken\");\n    //       let apiDomain = await localStorage.getItem(\"apiDomain\");\n    //       let axiosConfig = {\n    //           headers: {\n    //               \"Authorization\": \"Bearer \"+ token\n    //           }\n    //       };\n    //       let res = await axios.get(apiDomain + 'user_groups/' + hashId, axiosConfig)\n    //      .then((res) => {\n    //           document.getElementById(\"name\").value = res.data.name\n    //           document.getElementById(\"code\").value = res.data.code\n    //           location.reload();\n    //       })\n    //      .catch((err) => {\n    //         console.log(\"AXIOS ERROR: \", err);\n    //      })\n    // },\n    linkToUsers: function () {\n      var _linkToUsers = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(hashId, name) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$router.push({\n                  name: 'Users'\n                });\n                this.$store.state.userGroupHashId = hashId;\n                this.$store.state.userGroupName = name;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function linkToUsers(_x, _x2) {\n        return _linkToUsers.apply(this, arguments);\n      }\n\n      return linkToUsers;\n    }()\n  },\n  watch: {},\n  computed: {}\n};",{"version":3,"sources":["UserGroups.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n      <Navigation/>\r\n      <div class=\"container-fluid\">\r\n            <div class=\"row\"> \r\n                 <FormBuilder\r\n                    api-model=\"user_groups\" \r\n                    card-title=\"Create New Role\"\r\n                    :card-button=\"cardButton\"\r\n                    :btn-close=\"btnClose\"\r\n                    v-if=\"this.$store.state.showModal\" \r\n                    card-size=\"modal-dialog modal-dialog-centered modal-lg\"\r\n                    :card-input=\"form\"\r\n                    success-message=\"Role Succesfully Added!\"\r\n                    @closeModal=\"closeModal\"\r\n                    :card-upload=\"uploadTextBox\"\r\n                    :loading=\"this.$store.state.loading\"\r\n                 />\r\n\r\n                 <FormBuilder\r\n                    api-model=\"user_groups\" \r\n                    card-title=\"Update Role\"\r\n                    :card-button=\"cardButtonUpdate\"\r\n                    card-size=\"modal-dialog modal-dialog-centered modal-lg\"\r\n                    :card-input=\"form\"\r\n                    success-message=\"Role Succesfully Updated!\"\r\n                    v-if=\"this.$store.state.showModalUpdate\" \r\n                    @closeModal=\"closeModal\"\r\n                    :btn-close=\"btnClose\"\r\n                    :card-upload=\"uploadTextBox\"\r\n                     :loading=\"this.$store.state.loading\"\r\n                 />\r\n\r\n                 <!-- <FormBuilder\r\n                    card-title=\"Copy Role\"\r\n                    :card-button=\"cardButtonUpdate\"\r\n                    card-size=\"modal-dialog modal-dialog-centered modal-lg\"\r\n                    :card-input=\"form\"\r\n                    v-if=\"showModalCopy\" \r\n                    @closeModal=\"closeModal\"\r\n                    :btn-close=\"btnClose\"\r\n                    :card-upload=\"uploadTextBox\"\r\n                 /> -->\r\n\r\n                 <div class=\"col-12\">\r\n                    <template v-if=\"syncing == true\">\r\n                        <Loader api-model=\"user_groups\" @doneLoading=\"stopSync\" :indexed-filter=\"indexedFilter\"/>\r\n                    </template>\r\n                    <template v-else>\r\n                    <TableList\r\n                        api-model=\"user_groups\"\r\n                        :show-fields=\"showFields\"\r\n                        table-name=\"Roles\"\r\n                        :card-input=\"form\"\r\n                        :card-upload=\"uploadTextBox\"\r\n                        :card-style=\"cardStyle\"\r\n                        :btn-add=\"btnAdd\"\r\n                        :indexed-filter=\"indexedFilter\"\r\n                        :icon-buttons=\"iconButtons\"\r\n                        @viewUsersIcon=\"linkToUsers\"\r\n                        :icon-color=\"iconColor\"\r\n                        @btnAddModal=\"openModal\"\r\n                        @cardclick=\"linkToUsers\"\r\n                    \r\n                    />  \r\n                    </template>\r\n                 </div>\r\n            </div>\r\n         </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport Navigation from '@/components/Navigation.vue'\r\nimport Sidebar from '@/components/Sidebar.vue'\r\nimport Loader from '@/components/Loader.vue'\r\nimport TableList from '@/components/TableList.vue'\r\nimport FormBuilder from '@/components/FormBuilder.vue'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserGroups',\r\n  mounted () {\r\n     this.$store.dispatch('getBranches');\r\n  },\r\n  data:\r\n    function() {\r\n        return{\r\n            syncing: true,\r\n            file: '',\r\n            showFields: {\r\n                \"orderBy\": \"updatedAt\",\r\n                \"orientation\": \"desc\",\r\n                \"list\": ['name','code']\r\n            },\r\n              iconButtons: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"fas fa-pen\",\r\n                  callName: \"retrieveData\",\r\n                  accepting: [\"hashId\"]\r\n                },\r\n                 {\r\n                  name: \"use2\",\r\n                  uiName: \"fas fa-times\",\r\n                  callName: \"delete\",\r\n                  accepting: [\"hashId\"]\r\n                },\r\n             ],\r\n             btnAdd:[{\r\n                name:\"btnAdd\",\r\n                callName: \"btnAddModal\"\r\n             }],\r\n             cardButton: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"Create\",\r\n                  callName: \"postData\",\r\n                  className: \"btn btn-primary\"\r\n                }\r\n              ],\r\n              btnClose: [\r\n                {\r\n                  name: \"btnClose\",\r\n                  uiName: \"Cancel\",\r\n                  callName: \"closeModal\",\r\n                }\r\n              ],\r\n              viewButtons: [\r\n                {\r\n                  name: \"viewUsers\",\r\n                  uiName: \"View Users\",\r\n                  callName: \"useAccount\",\r\n                  accepting: [\"hashId\"]\r\n                }\r\n              ],\r\n              form: [\r\n                {\r\n                  name: \"name\",\r\n                  inputId: \"name\",\r\n                  labelName: \"Name:\",\r\n                  cardInputCol: \"col-md-6\",\r\n                  errorName: \"Please input Name\",\r\n                  ifRequired: true,\r\n                  inputType: \"varchar\"\r\n                },\r\n                {\r\n                  name: \"code\",\r\n                  inputId: \"code\",\r\n                  labelName: \"Code:\",\r\n                  cardInputCol: \"col-md-6\",\r\n                  ifRequired: true,\r\n                  inputType: \"varchar\",\r\n                  errorName: \"Please input Code\",\r\n                }\r\n              ],\r\n              uploadTextBox: [{\r\n                  name: \"photoUrl\",\r\n                  labelName: \"Upload Photo:\",\r\n                  cardInputCol: \"col-12\",\r\n                  inputType: \"file\",\r\n                  fileId: \"file\",\r\n                  acceptUpload: \"image/x-png,image/jpeg\",\r\n              }],\r\n               cardButtonUpdate: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"Save\",\r\n                  callName: \"putData\",\r\n                  className: \"btn btn-primary\"\r\n                }\r\n              ],\r\n               cardStyle: [\r\n                   {\r\n                    color: '#0B055B'\r\n                   }\r\n                 ],\r\n                 iconColor: [\r\n                 {\r\n                     color: '#CBCBCB'\r\n                 }\r\n             ],\r\n            indexedFilter: {\r\n              status: \"A\"\r\n            }\r\n        }\r\n    },\r\n  components: {\r\n      Navigation,\r\n      Loader,\r\n      Sidebar,\r\n      TableList,\r\n      FormBuilder\r\n  },\r\n\r\n  methods: {\r\n        stopSync: function () {\r\n            this.syncing = false\r\n        },\r\n        closeModal: function(){\r\n          this.$store.state.showModal = false\r\n          this.$store.state.showModalUpdate = false\r\n          this.$store.state.loading = false\r\n          this.showModalUpdate = false\r\n        },\r\n        openModal: function (){\r\n          this.$store.state.showModal = true\r\n        },    \r\n      // async copyUserGroup (hashId){\r\n      //       this.showModalCopy = true\r\n\r\n      //       let token = await localStorage.getItem(\"apiToken\");\r\n      //       let apiDomain = await localStorage.getItem(\"apiDomain\");\r\n\r\n      //       let axiosConfig = {\r\n      //           headers: {\r\n      //               \"Authorization\": \"Bearer \"+ token\r\n      //           }\r\n      //       };\r\n      //       let res = await axios.get(apiDomain + 'user_groups/' + hashId, axiosConfig)\r\n      //      .then((res) => {\r\n      //           document.getElementById(\"name\").value = res.data.name\r\n      //           document.getElementById(\"code\").value = res.data.code\r\n      //           location.reload();\r\n      //       })\r\n      //      .catch((err) => {\r\n      //         console.log(\"AXIOS ERROR: \", err);\r\n      //      })\r\n      // },\r\n      async linkToUsers(hashId,name){\r\n           this.$router.push({ name: 'Users' })\r\n           this.$store.state.userGroupHashId = hashId\r\n           this.$store.state.userGroupName = name\r\n      }\r\n      \r\n  },\r\n  watch:{\r\n  },\r\n  computed: {\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.add {\r\n  color: #7808F7;\r\n  font-size:25px;\r\n}\r\n</style>"],"sourceRoot":"src/views"}]}