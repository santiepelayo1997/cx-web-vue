{"remainingRequest":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\src\\views\\Accounts.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\src\\views\\Accounts.vue","mtime":1572404014000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\iRipple\\\\Desktop\\\\cx-web-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Navigation from \"@/components/Navigation.vue\";\nimport Sidebar from \"@/components/Sidebar.vue\";\nimport Loader from \"@/components/Loader.vue\";\nimport TableList from \"@/components/TableList.vue\";\nimport FormBuilder from \"@/components/FormBuilder.vue\";\nexport default {\n  name: \"accounts\",\n  mounted: function mounted() {},\n  data: function data() {\n    return {\n      syncing: true,\n      showFields: {\n        orderBy: \"updatedAt\",\n        orientation: \"desc\",\n        list: [\"name\", \"companyName\", \"email\", \"mobileNo\"]\n      },\n      actionButtons: [{\n        name: \"use\",\n        uiName: \"Use this test account\",\n        callName: \"useAccount\",\n        accepting: [\"hashId\"]\n      }],\n      indexedFilter: {\n        status: \"B\"\n      }\n    };\n  },\n  components: {\n    Navigation: Navigation,\n    Sidebar: Sidebar,\n    Loader: Loader,\n    TableList: TableList,\n    FormBuilder: FormBuilder\n  },\n  methods: {\n    stopSync: function stopSync() {\n      this.syncing = false;\n    },\n    useThisAccount: function () {\n      var _useThisAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(hashId) {\n        var acc;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$store.state.db.accounts.get({\n                  hashId: hashId\n                });\n\n              case 2:\n                acc = _context.sent;\n                localStorage.setItem(\"currentAccount\", acc.hashId); //download remove objectUpdated at for these tables\n\n                this.$router.push(\"/main\");\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function useThisAccount(_x) {\n        return _useThisAccount.apply(this, arguments);\n      }\n\n      return useThisAccount;\n    }()\n  },\n  watch: {},\n  computed: {}\n};",{"version":3,"sources":["Accounts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,UAAA,MAAA,6BAAA;AACA,OAAA,OAAA,MAAA,0BAAA;AACA,OAAA,MAAA,MAAA,yBAAA;AACA,OAAA,SAAA,MAAA,4BAAA;AACA,OAAA,WAAA,MAAA,8BAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,OAFA,qBAEA,CAAA,CAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA;AACA,QAAA,OAAA,EAAA,WADA;AAEA,QAAA,WAAA,EAAA,MAFA;AAGA,QAAA,IAAA,EAAA,CAAA,MAAA,EAAA,aAAA,EAAA,OAAA,EAAA,UAAA;AAHA,OAFA;AAOA,MAAA,aAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA,uBAFA;AAGA,QAAA,QAAA,EAAA,YAHA;AAIA,QAAA,SAAA,EAAA,CAAA,QAAA;AAJA,OADA,CAPA;AAgBA,MAAA,aAAA,EAAA;AACA,QAAA,MAAA,EAAA;AADA;AAhBA,KAAA;AAoBA,GAxBA;AAyBA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,MAAA,EAAA,MAHA;AAIA,IAAA,SAAA,EAAA,SAJA;AAKA,IAAA,WAAA,EAAA;AALA,GAzBA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,cAAA;AAAA;AAAA;AAAA,8BAAA,iBAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA;AAAA,kBAAA,MAAA,EAAA;AAAA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,GAFA;AAGA,gBAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,GAAA,CAAA,MAAA,EAHA,CAIA;;AACA,qBAAA,OAAA,CAAA,IAAA,CAAA,OAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJA,GAhCA;AA4CA,EAAA,KAAA,EAAA,EA5CA;AA6CA,EAAA,QAAA,EAAA;AA7CA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <Navigation/>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-9 col-lg-10\">\r\n          <template v-if=\"syncing == true\">\r\n            <Loader api-model=\"accounts\" @doneLoading=\"stopSync\" :indexed-filter=\"indexedFilter\" />\r\n          </template>\r\n          <template v-else>\r\n            <TableList\r\n              api-model=\"accounts\"\r\n              :show-fields=\"showFields\"\r\n              :indexed-filter=\"indexedFilter\"\r\n              :action-buttons=\"actionButtons\"\r\n              @useAccount=\"useThisAccount\"\r\n            />\r\n          </template>\r\n          <FormBuilder/>\r\n        </div>\r\n      </div>\r\n    </div>   \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Navigation from \"@/components/Navigation.vue\";\r\nimport Sidebar from \"@/components/Sidebar.vue\";\r\nimport Loader from \"@/components/Loader.vue\";\r\nimport TableList from \"@/components/TableList.vue\";\r\nimport FormBuilder from \"@/components/FormBuilder.vue\";\r\n\r\n\r\nexport default {\r\n  name: \"accounts\",\r\n  mounted() {},\r\n  data: function() {\r\n    return {\r\n      syncing: true,\r\n      showFields: {\r\n        orderBy: \"updatedAt\",\r\n        orientation: \"desc\",\r\n        list: [\"name\", \"companyName\", \"email\", \"mobileNo\"]\r\n      },\r\n      actionButtons: [\r\n        {\r\n          name: \"use\",\r\n          uiName: \"Use this test account\",\r\n          callName: \"useAccount\",\r\n          accepting: [\"hashId\"]\r\n        },\r\n        \r\n      ],\r\n      indexedFilter: {\r\n          status: \"B\"\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    Navigation,\r\n    Sidebar,\r\n    Loader,\r\n    TableList,\r\n    FormBuilder\r\n  },\r\n  methods: {\r\n    stopSync: function() {\r\n      this.syncing = false;\r\n    },\r\n    useThisAccount: async function(hashId) {\r\n      //delete other accounts' records?\r\n      let acc = await this.$store.state.db.accounts.get({ hashId: hashId });\r\n      localStorage.setItem(\"currentAccount\", acc.hashId);\r\n      //download remove objectUpdated at for these tables\r\n      this.$router.push(\"/main\");\r\n    }\r\n  },\r\n  watch: {},\r\n  computed: {}\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n.no-gutters {\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n}\r\n</style>"],"sourceRoot":"src/views"}]}