{"remainingRequest":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\src\\components\\FormBuilder.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\src\\components\\FormBuilder.vue","mtime":1576735377893},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571017171362},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1571017108564},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571017171362},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1571017172902}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios';\r\nimport ColorPicker from '@/components/ColorPicker.vue'\r\n\r\nexport default {\r\n    name: 'FormBuilder',\r\n    components: {\r\n    ColorPicker\r\n    },\r\n    mounted() {\r\n   \r\n      if(document.body.contains(document.querySelector('select')) == true){\r\n         const select = document.querySelector('select');\r\n         select.selectedIndex = 0;\r\n      }\r\n      if(document.body.contains(document.querySelector('#file')) == true){\r\n          document.getElementById(\"photoUrl\").style.display = \"\";\r\n          document.getElementById(\"loadingScreen\").style.display = \"none\";\r\n          document.getElementById(\"file\").onchange = function(){\r\n              var reader = new FileReader();\r\n              var elements = document.getElementsByClassName(\"btn\");\r\n               for (var i = 0; i < elements.length; i++) {\r\n                  elements[i].disabled =true;\r\n               }\r\n                document.getElementById(\"file\").disabled =true;\r\n                document.getElementById(\"loadingScreen\").style.display = \"\";\r\n                document.getElementById(\"photoUrl\").style.display = \"none\";\r\n                reader.onload = function()\r\n                {\r\n                  var elements = document.getElementsByClassName(\"btn\");\r\n                  for (var i = 0; i < elements.length; i++) {\r\n                    elements[i].disabled = false;\r\n                  }\r\n                  document.getElementById(\"file\").disabled =false;\r\n                  document.getElementById(\"loadingScreen\").style.display = \"none\";\r\n                  document.getElementById(\"photoUrl\").style.display = \"\";\r\n                  var output = document.getElementById('photoUrl');\r\n                  output.src = reader.result;\r\n                }\r\n                reader.readAsDataURL(event.target.files[0]);\r\n           };\r\n      }\r\n    \r\n\r\n    },\r\n    data: function() {\r\n        return {\r\n            selected: \"Default\",\r\n            showModal:  false,\r\n            selectedFile: null,\r\n            errorMessage: false,\r\n            checkFormIfValid: true,\r\n            file: ''\r\n        }\r\n    },\r\n    props: {\r\n        apiModel: String,\r\n        cardName:String,\r\n        cardTitle: String,\r\n        colClass: String,\r\n        colorPicker: Array,\r\n        checkBox: Array,\r\n        successMessage: String,\r\n        cardButton: Array,\r\n        btnClose: Array,\r\n        fieldDefinition: Object,\r\n        loading: Boolean,\r\n        apiTypeRequest: String,\r\n        cardSize: String,\r\n        alertCustom: Array,\r\n        cardInput: Array,\r\n        textArea: Array,\r\n        formSelect: Array,\r\n        cardUpload: Array\r\n    },\r\n    methods: {\r\n\r\n        emitActionToParent: function(action,hashId){\r\n        \r\n           this.$emit(action,hashId)\r\n           let forms = [];\r\n           //If Posting Data \r\n           if(action == \"postData\"){\r\n                //Validate Form\r\n                let arrayItems = [];\r\n                let form = arrayItems.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.formSelect||[])\r\n                for (let i = 0; i < form.length; i++) {\r\n                  let text = form[i];\r\n                   this.validateInputTextBox(text.name,text.inputType,text.ifRequired)\r\n                }  \r\n                if(this.checkFormIfValid != false){\r\n                    //Start of saving of data\r\n                    this.$store.state.loading = true\r\n                    this.$store.dispatch('saveData', [forms.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.formSelect||[],this.colorPicker||[],this.checkBox||[]), this.apiModel , this.file, this.successMessage])\r\n                }\r\n              \r\n           //If Updating Data\r\n           }else if(action == \"putData\"){\r\n              \r\n                let arrayItems = [];\r\n                let validateInputTextBox;\r\n                let validToSave;\r\n                \r\n\r\n                let form = arrayItems.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.formSelect||[])\r\n                for (let i = 0; i < form.length; i++) {\r\n                   let text = form[i];\r\n                    validateInputTextBox =  this.validateInputTextBox(text.name,text.inputType,text.ifRequired)\r\n                    if(validateInputTextBox == false){\r\n                       validToSave = false\r\n                    }\r\n                }  \r\n           \r\n                if(validToSave != false){\r\n                    this.$store.state.loading = true\r\n                    this.$store.dispatch('updateData', [forms.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.colorPicker||[],this.checkBox||[]), this.apiModel , this.file, this.successMessage])\r\n                }\r\n           //If Changing Password\r\n           }else if(action == \"changePassword\"){\r\n       \r\n                let arrayItems = [];\r\n                let validateInputTextBox;\r\n                let validToSave;\r\n                \r\n\r\n                let form = arrayItems.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.formSelect||[])\r\n                for (let i = 0; i < form.length; i++) {\r\n                   let text = form[i];\r\n                   console.log(text)\r\n       \r\n                     validateInputTextBox =  this.validateInputTextBox(text.name,text.inputType,text.ifRequired)\r\n                    \r\n                    // if(validateInputTextBox == false){\r\n                    //    validToSave = false\r\n                    // }\r\n                }  \r\n           \r\n                // if(validToSave != false){\r\n                //       this.$store.state.loading = true\r\n                //       this.$store.dispatch('changePassword', [this.$store.state.selectedUserHash, this.apiModel, this.cardInput,this.successMessage] )\r\n                // }\r\n               \r\n           } \r\n        },\r\n        testValidation: function(){\r\n               this.$store.state.checkFormIfValid = false\r\n        },\r\n        handleFileUpload: function(){\r\n           let formData = new FormData();\r\n           formData.append('file', event.target.files[0], event.target.files[0].name);\r\n           this.file = formData\r\n        },\r\n        closeAlert: function(){\r\n           this.$store.state.ifStatusSucess = null\r\n        },\r\n        removePhoto:function(){\r\n          let image = document.getElementById(\"photoUrl\")\r\n          image.src = 'https://www.exclusivehomedesign.it/wp-content/uploads/2018/07/noPhoto.png'\r\n          document.getElementById(\"file\").value = \"\";\r\n          this.$store.state.photoUrl = \"\";\r\n        },\r\n        checkForm: function (e) {\r\n            e.preventDefault();\r\n        },\r\n        emitSelect  : function(action,selected){\r\n           this.$emit(action,selected)\r\n        },\r\n        close: function () {\r\n            this.$emit('close');\r\n        },\r\n       setInputFilter(textbox, inputFilter) {\r\n          [\"input\", \"keydown\", \"keyup\", \"mousedown\", \"mouseup\", \"select\", \"contextmenu\", \"drop\"].forEach(function(event) {\r\n            textbox.addEventListener(event, function() {\r\n              if (inputFilter(this.value)) {\r\n                this.oldValue = this.value;\r\n                this.oldSelectionStart = this.selectionStart;\r\n                this.oldSelectionEnd = this.selectionEnd;\r\n              } else if (this.hasOwnProperty(\"oldValue\")) {\r\n                this.value = this.oldValue;\r\n                this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);\r\n              } else {\r\n                this.value = \"\";\r\n              }\r\n            });\r\n          });\r\n        },\r\n        validateInputTextBox:function(name,inputType,ifRequired){\r\n            //Check if required field\r\n            if(ifRequired == true){\r\n\r\n                  if(inputType == \"varchar\"){\r\n                      let varchar = document.getElementById(name).value\r\n                      if(varchar != \"\")\r\n                      {\r\n                          document.getElementById(name).classList.remove('is-invalid');\r\n                          this.checkFormIfValid = true\r\n                      }else{\r\n                          document.getElementById(name).classList.add('is-invalid');\r\n                          this.checkFormIfValid = false \r\n                      }\r\n                  }else if(inputType == \"number\"){\r\n                          let number = document.getElementById(name).value\r\n                           if(number == \"\"){\r\n                              document.getElementById(name).classList.add('is-invalid');\r\n                              this.checkFormIfValid = false \r\n                          }else{\r\n                              document.getElementById(name).classList.remove('is-invalid');\r\n                              this.setInputFilter(document.getElementById(name), function(value) {\r\n                               return /^-?\\d*$/.test(value);\r\n                              });\r\n                          }\r\n                 \r\n                  }else if(inputType == \"email\"){\r\n\r\n                      let email = document.getElementById(name).value\r\n                      let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                      if (email == '' || !re.test(email))\r\n                      { \r\n                           document.getElementById(name).classList.add('is-invalid');\r\n                            this.checkFormIfValid = false \r\n                      }else{\r\n                          document.getElementById(name).classList.remove('is-invalid');\r\n                          this.checkFormIfValid = true\r\n                      }\r\n                  }else if(inputType == \"textarea\"){\r\n                      let textarea = document.getElementById(name).value\r\n                      if(textarea != \"\")\r\n                      {\r\n                          document.getElementById(name).classList.remove('is-invalid');\r\n                          this.checkFormIfValid = true\r\n                      }else{\r\n                          document.getElementById(name).classList.add('is-invalid');\r\n                           this.checkFormIfValid = false \r\n                      }\r\n                  }else if(inputType == \"text\"){\r\n                      let text = document.getElementById(name)\r\n                      text.onkeydown = function(e){\r\n                        if (e.shiftKey || e.ctrlKey || e.altKey) {\r\n                            e.preventDefault();\r\n                        } else {\r\n                            var key = e.keyCode;\r\n                            if (!((key == 8) || (key == 32) || (key == 46) || (key >= 35 && key <= 40) || (key >= 65 && key <= 90))) {\r\n                              e.preventDefault();\r\n                            }\r\n                        }\r\n                     };\r\n                  }else if(inputType == \"password\"){\r\n\r\n                        let password = document.getElementById(\"password\").value\r\n                        let confirmPassword = document.getElementById(\"confirmPassword\").value\r\n\r\n                        console.log(password)\r\n                \r\n       \r\n                        if(password == \"\" || confirmPassword == \"\" ){\r\n                           document.getElementById(name).classList.add('is-invalid');\r\n                           this.checkFormIfValid = false \r\n                        }else{\r\n                          document.getElementById(\"password\").classList.remove('is-invalid');\r\n                            document.getElementById(\"confirmPassword\").classList.remove('is-invalid');\r\n                          // if(password!=confirmPassword){\r\n                          //    document.getElementById(name).classList.add('is-invalid');\r\n                          //    this.checkFormIfValid = false \r\n                          // }else{\r\n                          //    document.getElementById(name).classList.remove('is-invalid');\r\n                          //    this.checkFormIfValid = true\r\n                          // }\r\n                        }\r\n\r\n                  }else if(inputType == \"select\"){\r\n                        let val = document.getElementById(name).value\r\n                        if(val == \"\" || val == null){\r\n                           document.getElementById(name).classList.add('is-invalid');\r\n                           this.checkFormIfValid = false \r\n                        }else{\r\n                          document.getElementById(name).classList.remove('is-invalid');\r\n                          this.checkFormIfValid = true\r\n                        }\r\n\r\n\r\n                  }\r\n\r\n\r\n                  return  this.checkFormIfValid\r\n           \r\n            //If not required field\r\n            }else{\r\n        \r\n                  if(inputType == \"varchar\"){\r\n                      document.getElementById(name).classList.remove('is-invalid');\r\n                  }else if(inputType == \"number\"){\r\n                      this.setInputFilter(document.getElementById(name), function(value) {\r\n                      return /^-?\\d*$/.test(value); });\r\n                  }else if(inputType == \"text\"){\r\n                        let text = document.getElementById(name).value\r\n                        text.onkeydown = function(e){\r\n                          if (e.shiftKey || e.ctrlKey || e.altKey) {\r\n                              e.preventDefault();\r\n                          } else {\r\n                              var key = e.keyCode;\r\n                              if (!((key == 8) || (key == 32) || (key == 46) || (key >= 35 && key <= 40) || (key >= 65 && key <= 90))) {\r\n                                e.preventDefault();\r\n                              }\r\n                          }\r\n                      };\r\n                    }\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        \r\n    },\r\n    watch: {\r\n    \r\n    }\r\n}\r\n",{"version":3,"sources":["FormBuilder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"FormBuilder.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <transition name=\"modal\">\r\n      <div class=\"modal modal-mask\" id=\"addModal\"  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addModal\" aria-hidden=\"true\">\r\n        <div :class=\"cardSize\" role=\"document\">\r\n          <div class=\"modal-content\" @click.stop>\r\n            <div class=\"modal-header d-flex justify-content-center\">\r\n              <h5 class=\"modal-title \" id=\"exampleModalScrollableTitle\">{{ this.cardTitle }}</h5>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n               <!-- START FORM -->\r\n                <form\r\n                  name=\"form\" \r\n                  @submit=\"checkForm\"\r\n                  method=\"post\"\r\n                >\r\n            \r\n                    <!-- <div class=\"alert alert-success\"> -->\r\n                  <span v-if=\"this.$store.state.errorMessage != '' || this.$store.state.errorMessage == null\">\r\n                    <div class=\"alert alert-danger\" id=\"customAlert\" >\r\n                        <div class=\"alert-container\">\r\n                        <div class=\"alert-icon\">\r\n                            <i class=\"fas fa-exclamation-triangle\"></i>\r\n                        </div>\r\n                        <button type=\"button\" @click=\"closeAlert\" class=\"close-icon\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span>clear</span>\r\n                        </button>\r\n                          <label id=\"labelAlert\">{{this.$store.state.errorMessage}}</label>\r\n                        </div>\r\n                    </div>\r\n                  </span>\r\n            \r\n                \r\n              <div class=\"row\">\r\n                    <div v-for=\"cU in cardUpload\" v-bind:key=\"cU.name\" :class=\"cU.cardInputCol\">\r\n                      <div class=\"d-flex justify-content-center\">   \r\n                        <div class=\"avatar-preview\">\r\n                            <div id=\"divImagePreview\" class=\"text-center\">\r\n                          \r\n                                    <div class=\"d-flex justify-content-center\" >\r\n                                        <span \r\n                                          id=\"loadingScreen\"\r\n                                          class=\"spinner-border spinner-border-sm mt-5\" \r\n                                          role=\"status\" \r\n                                          aria-hidden=\"true\" >\r\n                                        </span>\r\n                                    </div>   \r\n                                  <img id=\"photoUrl\" src=\"../images/noimage.png\" class=\"rounded img-fluid\">\r\n                            </div>\r\n                            <div class=\" row\" id=\"photoButtons\">\r\n                              <div class=\"wrapper\">\r\n                                    <div class=\" upload-btn-wrapper\">\r\n                                        <button type=\"button\"  class=\"btn btnEditPhoto\" \r\n                                        data-toggle=\"tooltip\" \r\n                                        data-placement=\"bottom\" \r\n                                        title=\"Tooltip on bottom\">\r\n                                        <i class=\"fas fa-pen\"></i>\r\n                                        </button>\r\n                                        <!-- <input type=\"file\" id=\"file\"  :class=\"cU.cardInputCol\" :v-model=\"cU.modelName\" ref=\"file\" :accept=\"cU.acceptUpload\" @change=\"cU.callName\"> -->\r\n                                        <input type=\"file\" id=\"file\"  :class=\"cU.cardInputCol\"  :v-model=\"cU.inputType\" ref=\"file\" :accept=\"cU.acceptUpload\" @change=\"handleFileUpload()\">\r\n                                    </div>\r\n                                   <div class=\"tooltip\">\r\n                                      <ul>\r\n                                        <li>File must be at least 5mb</li>\r\n                                        <li>PNG and JPG file format only</li>\r\n                                      </ul>\r\n                                  </div>\r\n                              </div>\r\n                            \r\n                              <div>\r\n                                <button class=\"btn btnDeletePhoto\" @click=\"removePhoto\"><i class=\"fas fa-trash-alt\"></i></button>\r\n                              </div>\r\n                            </div>\r\n                        </div></div>\r\n                    </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                  <div v-for=\"cI in cardInput\" v-bind:key=\"cI.name\" :class=\"cI.cardInputCol\">\r\n                      <label for=\"name\" class=\"col-form-label\">{{cI.labelName}}\r\n                          <span v-if=\"cI.ifRequired == true\">\r\n                              <span class=\"ifRequired\"> * </span>\r\n                          </span>\r\n                      </label>\r\n                      <input \r\n                      :type=\"cI.type\" \r\n                      :id=\"cI.inputId\" \r\n                      :name=\"cI.name\" \r\n                      class=\"inputTextBox mr-2 form-control\" \r\n                      :v-model=\"cI.name\"\r\n                      :minlength=\"cI.min\" \r\n                      :maxlength=\"cI.max\" \r\n                      :placeholder=\"cI.placeholder\"\r\n                      @keyup=\"validateInputTextBox(cI.name,cI.inputType,cI.ifRequired)\"\r\n                      :pattern=\"cI.pattern\"\r\n                      :required=\"cI.required\">\r\n                      <div class=\"invalid-feedback\" id=\"invalid\">{{cI.errorName}}</div>\r\n                  </div> \r\n\r\n                  <div class=\"form-group\" v-for=\"fS in formSelect\" v-bind:key=\"fS.name\" :class=\"fS.formSelectCol\">\r\n                    <label for=\"name\" class=\"col-form-label\">{{fS.labelName}}\r\n                        <span v-if=\"fS.ifRequired == true\">\r\n                             <span class=\"ifRequired\"> * </span>\r\n                        </span>\r\n                    </label>\r\n                    <select :class=\"fS.className\" v-model=\"selected\" :name=\"fS.name\" :id=\"fS.selectId\" @change=\"emitSelect(fS.callName,selected)\">\r\n                        <option value=\"\" disabled>Choose {{fS.defaultPlaceholder}}</option>\r\n                        <option v-for=\"option in fS.options\" v-bind:value=\"option.hashId\" v-bind:key=\"option.hashId\">\r\n                            {{ option.name }}\r\n                        </option>\r\n                    </select>\r\n                    <div class=\"invalid-feedback\" >{{fS.errorName}}</div>\r\n                  </div> \r\n\r\n                   <div class=\"form-group\" v-for=\"cb in checkBox\" v-bind:key=\"cb.name\" :class=\"cb.checkBoxCol\">\r\n                     <div class=\"d-flex align-items-center\">    <div class=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" :id=\"cb.checkBoxId\">\r\n                        <label class=\"custom-control-label pl-2\" :for=\"cb.labelCheckBox\">{{cb.placeholder}}</label>\r\n                      </div>  </div>\r\n                  </div>\r\n                \r\n                  <div class=\"form-group\" v-for=\"cp in colorPicker\" v-bind:key=\"cp.name\" :class=\"cp.colorPickerCol\">\r\n                      <br>\r\n                      <ColorPicker/>\r\n                  </div>\r\n\r\n                  <div class=\"form-group\" v-for=\"ta in textArea\" v-bind:key=\"ta.name\" :class=\"ta.formSelectCol\">\r\n                      <label for=\"name\" class=\"col-form-label\">{{ta.labelName}}\r\n                          <span v-if=\"ta.ifRequired == true\">\r\n                              <span class=\"ifRequired\"> * </span>\r\n                          </span>\r\n                      </label>\r\n                      <textarea class=\"form-control\"   @keyup=\"validateInputTextBox(ta.name,ta.inputType,ta.ifRequired)\" :maxlength=\"ta.max\"  aria-describedby=\"inputGroupPrepend\" :id=\"ta.id\" :rows=\"ta.rows\" ></textarea>\r\n                      <div class=\"invalid-feedback\" >{{ta.errorName}}</div>\r\n                  </div> \r\n             </div> \r\n              <br>\r\n              <div class=\"row pb-3\" >\r\n                <div class=\"col-12\">\r\n                      <div style=\"float:left\">  \r\n                          <span class=\"float-left\" style=\"color:#78909c;\"><b style=\"color:red;\">*</b> - Required Field</span>\r\n                      </div>\r\n                      <div style=\"float:right\">\r\n                          <span v-for=\"cb in cardButton\" v-bind:key=\"cb.name\">\r\n                                <button type=\"submit\" class=\"btn btnSave btn-primary mr-2\" @click=\"emitActionToParent(cb.callName);\">{{cb.uiName}}\r\n                                    <span v-if=\"loading == true\">\r\n                                          <span class=\"spinner-border spinner-border-sm\" id=\"spinnerButton\" role=\"status\" aria-hidden=\"true\" ></span>\r\n                                    </span>\r\n                                </button>\r\n                          </span>\r\n                          <span  v-for=\"bc in btnClose\" v-bind:key=\"bc.name\">\r\n                              <button type=\"button\" class=\"btn btnClose btn-secondary\"  @click=\"emitActionToParent(bc.callName)\">{{bc.uiName}}</button>\r\n                          </span>\r\n                      </div>\r\n                  </div>\r\n               </div>\r\n             </form>\r\n             <!-- END FORM -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport ColorPicker from '@/components/ColorPicker.vue'\r\n\r\nexport default {\r\n    name: 'FormBuilder',\r\n    components: {\r\n    ColorPicker\r\n    },\r\n    mounted() {\r\n   \r\n      if(document.body.contains(document.querySelector('select')) == true){\r\n         const select = document.querySelector('select');\r\n         select.selectedIndex = 0;\r\n      }\r\n      if(document.body.contains(document.querySelector('#file')) == true){\r\n          document.getElementById(\"photoUrl\").style.display = \"\";\r\n          document.getElementById(\"loadingScreen\").style.display = \"none\";\r\n          document.getElementById(\"file\").onchange = function(){\r\n              var reader = new FileReader();\r\n              var elements = document.getElementsByClassName(\"btn\");\r\n               for (var i = 0; i < elements.length; i++) {\r\n                  elements[i].disabled =true;\r\n               }\r\n                document.getElementById(\"file\").disabled =true;\r\n                document.getElementById(\"loadingScreen\").style.display = \"\";\r\n                document.getElementById(\"photoUrl\").style.display = \"none\";\r\n                reader.onload = function()\r\n                {\r\n                  var elements = document.getElementsByClassName(\"btn\");\r\n                  for (var i = 0; i < elements.length; i++) {\r\n                    elements[i].disabled = false;\r\n                  }\r\n                  document.getElementById(\"file\").disabled =false;\r\n                  document.getElementById(\"loadingScreen\").style.display = \"none\";\r\n                  document.getElementById(\"photoUrl\").style.display = \"\";\r\n                  var output = document.getElementById('photoUrl');\r\n                  output.src = reader.result;\r\n                }\r\n                reader.readAsDataURL(event.target.files[0]);\r\n           };\r\n      }\r\n    \r\n\r\n    },\r\n    data: function() {\r\n        return {\r\n            selected: \"Default\",\r\n            showModal:  false,\r\n            selectedFile: null,\r\n            errorMessage: false,\r\n            checkFormIfValid: true,\r\n            file: ''\r\n        }\r\n    },\r\n    props: {\r\n        apiModel: String,\r\n        cardName:String,\r\n        cardTitle: String,\r\n        colClass: String,\r\n        colorPicker: Array,\r\n        checkBox: Array,\r\n        successMessage: String,\r\n        cardButton: Array,\r\n        btnClose: Array,\r\n        fieldDefinition: Object,\r\n        loading: Boolean,\r\n        apiTypeRequest: String,\r\n        cardSize: String,\r\n        alertCustom: Array,\r\n        cardInput: Array,\r\n        textArea: Array,\r\n        formSelect: Array,\r\n        cardUpload: Array\r\n    },\r\n    methods: {\r\n\r\n        emitActionToParent: function(action,hashId){\r\n        \r\n           this.$emit(action,hashId)\r\n           let forms = [];\r\n           //If Posting Data \r\n           if(action == \"postData\"){\r\n                //Validate Form\r\n                let arrayItems = [];\r\n                let form = arrayItems.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.formSelect||[])\r\n                for (let i = 0; i < form.length; i++) {\r\n                  let text = form[i];\r\n                   this.validateInputTextBox(text.name,text.inputType,text.ifRequired)\r\n                }  \r\n                if(this.checkFormIfValid != false){\r\n                    //Start of saving of data\r\n                    this.$store.state.loading = true\r\n                    this.$store.dispatch('saveData', [forms.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.formSelect||[],this.colorPicker||[],this.checkBox||[]), this.apiModel , this.file, this.successMessage])\r\n                }\r\n              \r\n           //If Updating Data\r\n           }else if(action == \"putData\"){\r\n              \r\n                let arrayItems = [];\r\n                let validateInputTextBox;\r\n                let validToSave;\r\n                \r\n\r\n                let form = arrayItems.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.formSelect||[])\r\n                for (let i = 0; i < form.length; i++) {\r\n                   let text = form[i];\r\n                    validateInputTextBox =  this.validateInputTextBox(text.name,text.inputType,text.ifRequired)\r\n                    if(validateInputTextBox == false){\r\n                       validToSave = false\r\n                    }\r\n                }  \r\n           \r\n                if(validToSave != false){\r\n                    this.$store.state.loading = true\r\n                    this.$store.dispatch('updateData', [forms.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.colorPicker||[],this.checkBox||[]), this.apiModel , this.file, this.successMessage])\r\n                }\r\n           //If Changing Password\r\n           }else if(action == \"changePassword\"){\r\n       \r\n                let arrayItems = [];\r\n                let validateInputTextBox;\r\n                let validToSave;\r\n                \r\n\r\n                let form = arrayItems.concat(this.cardInput||[],this.textArea||[],this.cardUpload||[],this.formSelect||[])\r\n                for (let i = 0; i < form.length; i++) {\r\n                   let text = form[i];\r\n                   console.log(text)\r\n       \r\n                     validateInputTextBox =  this.validateInputTextBox(text.name,text.inputType,text.ifRequired)\r\n                    \r\n                    // if(validateInputTextBox == false){\r\n                    //    validToSave = false\r\n                    // }\r\n                }  \r\n           \r\n                // if(validToSave != false){\r\n                //       this.$store.state.loading = true\r\n                //       this.$store.dispatch('changePassword', [this.$store.state.selectedUserHash, this.apiModel, this.cardInput,this.successMessage] )\r\n                // }\r\n               \r\n           } \r\n        },\r\n        testValidation: function(){\r\n               this.$store.state.checkFormIfValid = false\r\n        },\r\n        handleFileUpload: function(){\r\n           let formData = new FormData();\r\n           formData.append('file', event.target.files[0], event.target.files[0].name);\r\n           this.file = formData\r\n        },\r\n        closeAlert: function(){\r\n           this.$store.state.ifStatusSucess = null\r\n        },\r\n        removePhoto:function(){\r\n          let image = document.getElementById(\"photoUrl\")\r\n          image.src = 'https://www.exclusivehomedesign.it/wp-content/uploads/2018/07/noPhoto.png'\r\n          document.getElementById(\"file\").value = \"\";\r\n          this.$store.state.photoUrl = \"\";\r\n        },\r\n        checkForm: function (e) {\r\n            e.preventDefault();\r\n        },\r\n        emitSelect  : function(action,selected){\r\n           this.$emit(action,selected)\r\n        },\r\n        close: function () {\r\n            this.$emit('close');\r\n        },\r\n       setInputFilter(textbox, inputFilter) {\r\n          [\"input\", \"keydown\", \"keyup\", \"mousedown\", \"mouseup\", \"select\", \"contextmenu\", \"drop\"].forEach(function(event) {\r\n            textbox.addEventListener(event, function() {\r\n              if (inputFilter(this.value)) {\r\n                this.oldValue = this.value;\r\n                this.oldSelectionStart = this.selectionStart;\r\n                this.oldSelectionEnd = this.selectionEnd;\r\n              } else if (this.hasOwnProperty(\"oldValue\")) {\r\n                this.value = this.oldValue;\r\n                this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);\r\n              } else {\r\n                this.value = \"\";\r\n              }\r\n            });\r\n          });\r\n        },\r\n        validateInputTextBox:function(name,inputType,ifRequired){\r\n            //Check if required field\r\n            if(ifRequired == true){\r\n\r\n                  if(inputType == \"varchar\"){\r\n                      let varchar = document.getElementById(name).value\r\n                      if(varchar != \"\")\r\n                      {\r\n                          document.getElementById(name).classList.remove('is-invalid');\r\n                          this.checkFormIfValid = true\r\n                      }else{\r\n                          document.getElementById(name).classList.add('is-invalid');\r\n                          this.checkFormIfValid = false \r\n                      }\r\n                  }else if(inputType == \"number\"){\r\n                          let number = document.getElementById(name).value\r\n                           if(number == \"\"){\r\n                              document.getElementById(name).classList.add('is-invalid');\r\n                              this.checkFormIfValid = false \r\n                          }else{\r\n                              document.getElementById(name).classList.remove('is-invalid');\r\n                              this.setInputFilter(document.getElementById(name), function(value) {\r\n                               return /^-?\\d*$/.test(value);\r\n                              });\r\n                          }\r\n                 \r\n                  }else if(inputType == \"email\"){\r\n\r\n                      let email = document.getElementById(name).value\r\n                      let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                      if (email == '' || !re.test(email))\r\n                      { \r\n                           document.getElementById(name).classList.add('is-invalid');\r\n                            this.checkFormIfValid = false \r\n                      }else{\r\n                          document.getElementById(name).classList.remove('is-invalid');\r\n                          this.checkFormIfValid = true\r\n                      }\r\n                  }else if(inputType == \"textarea\"){\r\n                      let textarea = document.getElementById(name).value\r\n                      if(textarea != \"\")\r\n                      {\r\n                          document.getElementById(name).classList.remove('is-invalid');\r\n                          this.checkFormIfValid = true\r\n                      }else{\r\n                          document.getElementById(name).classList.add('is-invalid');\r\n                           this.checkFormIfValid = false \r\n                      }\r\n                  }else if(inputType == \"text\"){\r\n                      let text = document.getElementById(name)\r\n                      text.onkeydown = function(e){\r\n                        if (e.shiftKey || e.ctrlKey || e.altKey) {\r\n                            e.preventDefault();\r\n                        } else {\r\n                            var key = e.keyCode;\r\n                            if (!((key == 8) || (key == 32) || (key == 46) || (key >= 35 && key <= 40) || (key >= 65 && key <= 90))) {\r\n                              e.preventDefault();\r\n                            }\r\n                        }\r\n                     };\r\n                  }else if(inputType == \"password\"){\r\n\r\n                        let password = document.getElementById(\"password\").value\r\n                        let confirmPassword = document.getElementById(\"confirmPassword\").value\r\n\r\n                        console.log(password)\r\n                \r\n       \r\n                        if(password == \"\" || confirmPassword == \"\" ){\r\n                           document.getElementById(name).classList.add('is-invalid');\r\n                           this.checkFormIfValid = false \r\n                        }else{\r\n                          document.getElementById(\"password\").classList.remove('is-invalid');\r\n                            document.getElementById(\"confirmPassword\").classList.remove('is-invalid');\r\n                          // if(password!=confirmPassword){\r\n                          //    document.getElementById(name).classList.add('is-invalid');\r\n                          //    this.checkFormIfValid = false \r\n                          // }else{\r\n                          //    document.getElementById(name).classList.remove('is-invalid');\r\n                          //    this.checkFormIfValid = true\r\n                          // }\r\n                        }\r\n\r\n                  }else if(inputType == \"select\"){\r\n                        let val = document.getElementById(name).value\r\n                        if(val == \"\" || val == null){\r\n                           document.getElementById(name).classList.add('is-invalid');\r\n                           this.checkFormIfValid = false \r\n                        }else{\r\n                          document.getElementById(name).classList.remove('is-invalid');\r\n                          this.checkFormIfValid = true\r\n                        }\r\n\r\n\r\n                  }\r\n\r\n\r\n                  return  this.checkFormIfValid\r\n           \r\n            //If not required field\r\n            }else{\r\n        \r\n                  if(inputType == \"varchar\"){\r\n                      document.getElementById(name).classList.remove('is-invalid');\r\n                  }else if(inputType == \"number\"){\r\n                      this.setInputFilter(document.getElementById(name), function(value) {\r\n                      return /^-?\\d*$/.test(value); });\r\n                  }else if(inputType == \"text\"){\r\n                        let text = document.getElementById(name).value\r\n                        text.onkeydown = function(e){\r\n                          if (e.shiftKey || e.ctrlKey || e.altKey) {\r\n                              e.preventDefault();\r\n                          } else {\r\n                              var key = e.keyCode;\r\n                              if (!((key == 8) || (key == 32) || (key == 46) || (key >= 35 && key <= 40) || (key >= 65 && key <= 90))) {\r\n                                e.preventDefault();\r\n                              }\r\n                          }\r\n                      };\r\n                    }\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        \r\n    },\r\n    watch: {\r\n    \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.custom-control-label::before, \r\n.custom-control-label::after {\r\n    width: 1.25rem;\r\n    height: 1.25rem;\r\n}\r\n.custom-control-label{\r\n  margin-top:20px;\r\n  color:#7808F7;\r\n  padding-top:2px;\r\n}\r\n#colorPicker {\r\n  background: #7808F7;\r\n  border-color:#7808F7;\r\n}\r\n.wrapper {\r\ntext-transform: uppercase;\r\ncursor: help;\r\nposition: relative;\r\ntext-align: center;\r\n-webkit-transform: translateZ(0); /* webkit flicker fix */\r\n-webkit-font-smoothing: antialiased; /* webkit text rendering fix */\r\n}\r\n.wrapper .tooltip {\r\nbackground: #7808F7;\r\nbottom: 100%;\r\ncolor: #fff;\r\ndisplay: block;\r\nleft: -68px;\r\nmargin-bottom: 15px;\r\nopacity: 0;\r\npadding: 20px;\r\npointer-events: none;\r\nposition: absolute;\r\nwidth: 200px;\r\n-webkit-transform: translateY(10px);\r\n  -moz-transform: translateY(10px);\r\n  -ms-transform: translateY(10px);\r\n   -o-transform: translateY(10px);\r\n    transform: translateY(10px);\r\n-webkit-transition: all .25s ease-out;\r\n  -moz-transition: all .25s ease-out;\r\n  -ms-transition: all .25s ease-out;\r\n   -o-transition: all .25s ease-out;\r\n    transition: all .25s ease-out;\r\n-webkit-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  -moz-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  -ms-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n   -o-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n    box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n}\r\n\r\n/* This bridges the gap so you can mouse into the tooltip without it disappearing */\r\n.wrapper .tooltip:before {\r\nbottom: -20px;\r\ncontent: \" \";\r\ndisplay: block;\r\nheight: 20px;\r\nleft: 0;\r\nposition: absolute;\r\nwidth: 100%;\r\n}\r\n\r\n/* CSS Triangles - see Trevor's post */\r\n.wrapper .tooltip:after {\r\nborder-left: solid transparent 10px;\r\nborder-right: solid transparent 10px;\r\nborder-top: solid #7808F7 10px;\r\nbottom: -10px;\r\ncontent: \" \";\r\nheight: 0;\r\nleft: 50%;\r\nmargin-left: -13px;\r\nposition: absolute;\r\nwidth: 0;\r\n}\r\n\r\n.wrapper:hover .tooltip {\r\nopacity: 1;\r\npointer-events: auto;\r\n-webkit-transform: translateY(0px);\r\n  -moz-transform: translateY(0px);\r\n  -ms-transform: translateY(0px);\r\n   -o-transform: translateY(0px);\r\n    transform: translateY(0px);\r\n}\r\n\r\n/* IE can just show/hide with no transition */\r\n.lte8 .wrapper .tooltip {\r\ndisplay: none;\r\n}\r\n\r\n.lte8 .wrapper:hover .tooltip {\r\ndisplay: block;\r\n}\r\n#spinnerButton{\r\n    width: 19px; \r\n    height: 19.5px;\r\n}\r\n#loadingScreen{\r\n     width: 120px;\r\n     height: 119.5px;\r\n     position:absolute; \r\n     color:#7808F7;\r\n}\r\n.avatar-preview{\r\n    position: relative;\r\n    padding-bottom: 20px;\r\n}\r\n#divImagePreview{\r\n    max-height:220px;\r\n    min-height: 220px;\r\n    min-width: 220px;\r\n    max-width: 220px;\r\n    outline: 0;\r\n    display: block;\r\n    transition: box-shadow .3s,  margin-top .3s, padding .3s;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 4px 4px 2px rgba(0, 0, 0, 0.12);\r\n}\r\n.upload-btn-wrapper {\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: inline-block;\r\n}\r\n#photoButtons{\r\n  padding-left:5px;\r\n}\r\n.btnEditPhoto {\r\n  color:white;\r\n  margin:3px;\r\n  background-color:#7808F7;\r\n  height:50px;\r\n  width:50px;\r\n  border-radius: 100%;\r\n  border-color:white;\r\n  border:1px solid white;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n.btnDeletePhoto{\r\n  border: 2px solid white;\r\n  color:white;\r\n  margin:3px;\r\n  background-color:#FF2F5E;\r\n  height:50px;\r\n  width:52px;\r\n  border-radius: 100%;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n.upload-btn-wrapper input[type=file] {\r\n  font-size: 100px;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  opacity: 0;\r\n}\r\n.custom-file-label::after {\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: block;\r\n    height: calc(1.5em + .75rem);\r\n    padding: .375rem .75rem;\r\n    line-height: 1.5;\r\n    color: white;\r\n    content: \"Browse\";\r\n    background-color:#7808F7;\r\n    border-left: inherit;\r\n    border-color: #7808F7;\r\n    border-radius: 0 .25rem .25rem 0;\r\n    height: 40px;\r\n}\r\n.custom-file-label {\r\n  border-color: #7808F7;\r\n  height: 41px;\r\n  border-radius: 5px;\r\n}\r\ntextarea{\r\n    border-color: #7808F7;\r\n  border-radius: 5px;\r\n}\r\n.ifRequired{\r\n  color:red;\r\n}\r\n.modal-mask {\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, .5);\r\n  display: table;\r\n  transition: opacity .3s ease;\r\n}\r\n.modal-enter {\r\n  opacity: 0;\r\n}\r\n.modal-leave-active {\r\n  opacity: 0;\r\n}\r\n.modal-enter .modal-content,\r\n.modal-leave-active .modal-content {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n.modal-header {\r\n    border-bottom: 1px solid white !important;\r\n}\r\n.modal-footer {\r\n    margin-top:20px;\r\n    margin-bottom:10px;\r\n    border-top: 1px solid white !important;\r\n    padding:0px !important;\r\n}\r\n.modal-content {\r\n  border-radius: 20px;\r\n  padding-left:42px;\r\n  padding-right: 39px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, .33);\r\n  transition: all .3s ease;\r\n}\r\n.col-form-label {\r\n   color:#7808F7;\r\n   text-align: left;\r\n   font-size:13px;\r\n   letter-spacing: 0;\r\n}\r\n.uploadTitle{\r\n    color:#7808F7;\r\n   text-align: left;\r\n   font-size:13px;\r\n   letter-spacing: 0;\r\n}\r\n.uploadPhoto{\r\n  color:#7808F7;\r\n  font-size:13px;\r\n  text-align: left;\r\n}\r\ninput {\r\n  border-radius: 5px;\r\n  height: 41px;\r\n  border-color: #7808F7;\r\n}\r\nselect{\r\n  border-radius: 5px;\r\n  height: 41px;\r\n  border-color: #7808F7;\r\n}\r\n.modal-title{\r\n  color:#7808F7;\r\n}\r\n.btnSave{\r\n  background: #7808F7 ;\r\n  border-color: #7808F7 ;\r\n  height:47px;\r\n  width:124px;\r\n  border-radius: 10px;\r\n}\r\n.btnClose{\r\n  background: #FF2F5E;\r\n  border-color: #FF2F5E;\r\n  height:47px;\r\n  width:124px;\r\n  border-radius: 10px;\r\n}\r\n.cardTextBoxes {\r\n  padding:10px;\r\n}\r\n.plus_button{\r\n    position: fixed;\r\n    bottom: 20px;\r\n    right: 20px;\r\n    color: #FA7921;\r\n    border: none;\r\n    outline: none;\r\n}\r\n.material-icons.md-48 { \r\n    font-size: 48px; \r\n    cursor: pointer;\r\n    border: none;\r\n    outline: none;\r\n    text-shadow: 0 2px 5px rgba(0,0,0,0.3);\r\n}\r\n\r\n</style>"]}]}