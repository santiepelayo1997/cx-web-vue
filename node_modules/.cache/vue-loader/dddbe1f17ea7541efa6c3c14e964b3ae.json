{"remainingRequest":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\src\\views\\UserGroup.vue?vue&type=style&index=0&id=6912aeaa&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\src\\views\\UserGroup.vue","mtime":1572401165966},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\css-loader\\index.js","mtime":1571017171576},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1571017172902},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1571017172796},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571017171362},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1571017172902}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nbody{\r\n  overflow: hidden !important;\r\n}\r\n.card-subtitle {\r\n  color:red !important;\r\n}\r\n.add {\r\n  color: #7808F7;\r\n  font-size:25px;\r\n}\r\n#notS{\r\n  color: #0BBEBA;\r\n}\r\n#sku {\r\n  color: #0BBEBA;\r\n}\r\n",{"version":3,"sources":["UserGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserGroup.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n      <Navigation/>\r\n      <div class=\"container-fluid\">\r\n            <div class=\"row\"> \r\n                 <FormBuilder\r\n                  card-title=\"Create New Role\"\r\n                  :card-button=\"cardButton\"\r\n                   card-size=\"modal-dialog modal-dialog-centered modal-lg\"\r\n                  :card-input=\"cardInput\"\r\n                  @saveData=\"saveNewData\"\r\n                 />\r\n                 <div class=\"col-12\">\r\n                    <template v-if=\"syncing == true\">\r\n                        <Loader api-model=\"user_groups\" @doneLoading=\"stopSync\" :indexed-filter=\"indexedFilter\"/>\r\n                    </template>\r\n                    \r\n                    <TableList\r\n                    api-model=\"user_groups\"\r\n                    :show-fields=\"showFields\"\r\n                    table-name=\"Roles\"\r\n                    :card-style=\"cardStyle\"\r\n                    :indexed-filter=\"indexedFilter\"\r\n                    :icon-buttons=\"iconButtons\"\r\n                 \r\n                    />  \r\n                 </div>\r\n            </div>\r\n         </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport Navigation from '@/components/Navigation.vue'\r\nimport Sidebar from '@/components/Sidebar.vue'\r\nimport Loader from '@/components/Loader.vue'\r\nimport TableList from '@/components/TableList.vue'\r\nimport FormBuilder from '@/components/FormBuilder.vue'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'usergroup',\r\n  mounted () {\r\n  },\r\n  data:\r\n    function() {\r\n        return{\r\n            syncing: true,\r\n            tableName : null,\r\n            showFields: {\r\n                \"orderBy\": \"updatedAt\",\r\n                \"orientation\": \"desc\",\r\n                \"list\": ['name','code']\r\n            },\r\n              iconButtons: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"edit\",\r\n                  callName: \"useAccount\",\r\n                  accepting: [\"hashId\"]\r\n                },\r\n                 {\r\n                  name: \"use2\",\r\n                  uiName: \"clear\",\r\n                  callName: \"useAccount\",\r\n                  accepting: [\"hashId\"]\r\n                },\r\n                   {\r\n                  name: \"visibility\",\r\n                  uiName: \"visibility\",\r\n                  callName: \"useAccount\",\r\n                  accepting: [\"hashId\"]\r\n                }\r\n              ],\r\n             cardButton: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"Create\",\r\n                  callName: \"saveData\",\r\n                  className: \"btn btn-primary\"\r\n                }\r\n              ],\r\n              viewButtons: [\r\n                {\r\n                  name: \"viewUsers\",\r\n                  uiName: \"View Users\",\r\n                  callName: \"useAccount\",\r\n                  accepting: [\"hashId\"]\r\n                }\r\n              ],\r\n               cardInput: [\r\n                {\r\n                  name: \"name\",\r\n                  inputId: \"name\",\r\n                  labelName: \"Name:\",\r\n                  cardInputCol: \"col-md-6\"\r\n                },\r\n                {\r\n                  name: \"code\",\r\n                  inputId: \"code\",\r\n                  labelName: \"Code:\",\r\n                  cardInputCol: \"col-md-6\"\r\n                }\r\n              ],\r\n              cardStyle: [\r\n                   {\r\n                    color: '#0B055B'\r\n                   }\r\n              ],\r\n            indexedFilter: null\r\n        }\r\n    },\r\n  components: {\r\n      Navigation,\r\n      Loader,\r\n      Sidebar,\r\n      TableList,\r\n      FormBuilder\r\n  },\r\n\r\n  methods: {\r\n      stopSync: function () {\r\n          this.syncing = false\r\n      },\r\n      async saveNewData (){\r\n        let name = document.getElementById(\"name\").value;\r\n        let code = document.getElementById(\"code\").value;\r\n\r\n        if (name == \"\"){\r\n            alert(\"Please input Name!\");\r\n        }else if (code == \"\"){\r\n            alert(\"Please input Code!\");\r\n        }else{\r\n\r\n            let token = await localStorage.getItem(\"apiToken\");\r\n            let apiDomain = await localStorage.getItem(\"apiDomain\");\r\n\r\n            let  postData = {\r\n                  name:  document.getElementById(\"name\").value,\r\n                  code:  document.getElementById(\"code\").value\r\n            }\r\n\r\n            let axiosConfig = {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \"+ token\r\n                }\r\n              };\r\n\r\n              let res = await axios.post(apiDomain +'user_groups', postData, axiosConfig)\r\n              .then((res) => {\r\n                console.log(\"RESPONSE RECEIVED: \", res);\r\n                 document.getElementById(\"name\").value = \"\";\r\n                 document.getElementById(\"code\").value = \"\";\r\n                 alert(\"Succesfully Added!\");\r\n\r\n              })\r\n              .catch((err) => {\r\n                console.log(\"AXIOS ERROR: \", err);\r\n              })\r\n        }\r\n    \r\n         \r\n    \r\n      }\r\n  },\r\n  watch:{\r\n  },\r\n  computed: {\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody{\r\n  overflow: hidden !important;\r\n}\r\n.card-subtitle {\r\n  color:red !important;\r\n}\r\n.add {\r\n  color: #7808F7;\r\n  font-size:25px;\r\n}\r\n#notS{\r\n  color: #0BBEBA;\r\n}\r\n#sku {\r\n  color: #0BBEBA;\r\n}\r\n</style>"]}]}