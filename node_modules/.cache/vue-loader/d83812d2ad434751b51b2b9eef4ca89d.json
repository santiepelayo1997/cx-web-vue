{"remainingRequest":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\iRipple\\Desktop\\cx-web-vue\\src\\views\\UserGroups.vue?vue&type=style&index=0&id=8622708e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\src\\views\\UserGroups.vue","mtime":1576633636000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\iRipple\\Desktop\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.add {\r\n  color: #7808F7;\r\n  font-size:25px;\r\n}\r\n",{"version":3,"sources":["UserGroups.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuPA;AACA;AACA;AACA","file":"UserGroups.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n      <Navigation/>\r\n      <div class=\"container-fluid\">\r\n            <div class=\"row\"> \r\n                 <FormBuilder\r\n                    api-model=\"user_groups\" \r\n                    card-title=\"Create New Role\"\r\n                    :card-button=\"cardButton\"\r\n                    :btn-close=\"btnClose\"\r\n                    v-if=\"this.$store.state.showModal\" \r\n                    card-size=\"modal-dialog modal-dialog-centered modal-lg\"\r\n                    :card-input=\"form\"\r\n                    success-message=\"Role Succesfully Added!\"\r\n                    @closeModal=\"closeModal\"\r\n                    :card-upload=\"uploadTextBox\"\r\n                    :loading=\"this.$store.state.loading\"\r\n                 />\r\n\r\n                 <FormBuilder\r\n                    api-model=\"user_groups\" \r\n                    card-title=\"Update Role\"\r\n                    :card-button=\"cardButtonUpdate\"\r\n                    card-size=\"modal-dialog modal-dialog-centered modal-lg\"\r\n                    :card-input=\"form\"\r\n                    success-message=\"Role Succesfully Updated!\"\r\n                    v-if=\"this.$store.state.showModalUpdate\" \r\n                    @closeModal=\"closeModal\"\r\n                    :btn-close=\"btnClose\"\r\n                    :card-upload=\"uploadTextBox\"\r\n                     :loading=\"this.$store.state.loading\"\r\n                 />\r\n\r\n                 <!-- <FormBuilder\r\n                    card-title=\"Copy Role\"\r\n                    :card-button=\"cardButtonUpdate\"\r\n                    card-size=\"modal-dialog modal-dialog-centered modal-lg\"\r\n                    :card-input=\"form\"\r\n                    v-if=\"showModalCopy\" \r\n                    @closeModal=\"closeModal\"\r\n                    :btn-close=\"btnClose\"\r\n                    :card-upload=\"uploadTextBox\"\r\n                 /> -->\r\n\r\n                 <div class=\"col-12\">\r\n                    <template v-if=\"syncing == true\">\r\n                        <Loader api-model=\"user_groups\" @doneLoading=\"stopSync\" :indexed-filter=\"indexedFilter\"/>\r\n                    </template>\r\n                    <template v-else>\r\n                    <TableList\r\n                        api-model=\"user_groups\"\r\n                        :show-fields=\"showFields\"\r\n                        table-name=\"Roles\"\r\n                        :card-input=\"form\"\r\n                        :card-upload=\"uploadTextBox\"\r\n                        :card-style=\"cardStyle\"\r\n                        :btn-add=\"btnAdd\"\r\n                        :indexed-filter=\"indexedFilter\"\r\n                        :icon-buttons=\"iconButtons\"\r\n                        @viewUsersIcon=\"linkToUsers\"\r\n                        :icon-color=\"iconColor\"\r\n                        @btnAddModal=\"openModal\"\r\n                        @cardclick=\"linkToUsers\"\r\n                    \r\n                    />  \r\n                    </template>\r\n                 </div>\r\n            </div>\r\n         </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport Navigation from '@/components/Navigation.vue'\r\nimport Sidebar from '@/components/Sidebar.vue'\r\nimport Loader from '@/components/Loader.vue'\r\nimport TableList from '@/components/TableList.vue'\r\nimport FormBuilder from '@/components/FormBuilder.vue'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserGroups',\r\n  mounted () {\r\n     this.$store.dispatch('getBranches');\r\n  },\r\n  data:\r\n    function() {\r\n        return{\r\n            syncing: true,\r\n            file: '',\r\n            showFields: {\r\n                \"orderBy\": \"updatedAt\",\r\n                \"orientation\": \"desc\",\r\n                \"list\": ['name','code']\r\n            },\r\n              iconButtons: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"fas fa-pen\",\r\n                  callName: \"retrieveData\",\r\n                  accepting: [\"hashId\"]\r\n                },\r\n                 {\r\n                  name: \"use2\",\r\n                  uiName: \"fas fa-times\",\r\n                  callName: \"delete\",\r\n                  accepting: [\"hashId\"]\r\n                },\r\n             ],\r\n             btnAdd:[{\r\n                name:\"btnAdd\",\r\n                callName: \"btnAddModal\"\r\n             }],\r\n             cardButton: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"Create\",\r\n                  callName: \"postData\",\r\n                  className: \"btn btn-primary\"\r\n                }\r\n              ],\r\n              btnClose: [\r\n                {\r\n                  name: \"btnClose\",\r\n                  uiName: \"Cancel\",\r\n                  callName: \"closeModal\",\r\n                }\r\n              ],\r\n              viewButtons: [\r\n                {\r\n                  name: \"viewUsers\",\r\n                  uiName: \"View Users\",\r\n                  callName: \"useAccount\",\r\n                  accepting: [\"hashId\"]\r\n                }\r\n              ],\r\n              form: [\r\n                {\r\n                  name: \"name\",\r\n                  inputId: \"name\",\r\n                  labelName: \"Name:\",\r\n                  cardInputCol: \"col-md-6\",\r\n                  errorName: \"Please input Name\",\r\n                  ifRequired: true,\r\n                  inputType: \"varchar\"\r\n                },\r\n                {\r\n                  name: \"code\",\r\n                  inputId: \"code\",\r\n                  labelName: \"Code:\",\r\n                  cardInputCol: \"col-md-6\",\r\n                  ifRequired: true,\r\n                  inputType: \"varchar\",\r\n                  errorName: \"Please input Code\",\r\n                }\r\n              ],\r\n              uploadTextBox: [{\r\n                  name: \"photoUrl\",\r\n                  labelName: \"Upload Photo:\",\r\n                  cardInputCol: \"col-12\",\r\n                  inputType: \"file\",\r\n                  fileId: \"file\",\r\n                  acceptUpload: \"image/x-png,image/jpeg\",\r\n              }],\r\n               cardButtonUpdate: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"Save\",\r\n                  callName: \"putData\",\r\n                  className: \"btn btn-primary\"\r\n                }\r\n              ],\r\n               cardStyle: [\r\n                   {\r\n                    color: '#0B055B'\r\n                   }\r\n                 ],\r\n                 iconColor: [\r\n                 {\r\n                     color: '#CBCBCB'\r\n                 }\r\n             ],\r\n            indexedFilter: {\r\n              status: \"A\"\r\n            }\r\n        }\r\n    },\r\n  components: {\r\n      Navigation,\r\n      Loader,\r\n      Sidebar,\r\n      TableList,\r\n      FormBuilder\r\n  },\r\n\r\n  methods: {\r\n        stopSync: function () {\r\n            this.syncing = false\r\n        },\r\n        closeModal: function(){\r\n          this.$store.state.showModal = false\r\n          this.$store.state.showModalUpdate = false\r\n          this.$store.state.loading = false\r\n          this.showModalUpdate = false\r\n        },\r\n        openModal: function (){\r\n          this.$store.state.showModal = true\r\n        },    \r\n      // async copyUserGroup (hashId){\r\n      //       this.showModalCopy = true\r\n\r\n      //       let token = await localStorage.getItem(\"apiToken\");\r\n      //       let apiDomain = await localStorage.getItem(\"apiDomain\");\r\n\r\n      //       let axiosConfig = {\r\n      //           headers: {\r\n      //               \"Authorization\": \"Bearer \"+ token\r\n      //           }\r\n      //       };\r\n      //       let res = await axios.get(apiDomain + 'user_groups/' + hashId, axiosConfig)\r\n      //      .then((res) => {\r\n      //           document.getElementById(\"name\").value = res.data.name\r\n      //           document.getElementById(\"code\").value = res.data.code\r\n      //           location.reload();\r\n      //       })\r\n      //      .catch((err) => {\r\n      //         console.log(\"AXIOS ERROR: \", err);\r\n      //      })\r\n      // },\r\n      async linkToUsers(hashId,name){\r\n           this.$router.push({ name: 'Users' })\r\n           this.$store.state.userGroupHashId = hashId\r\n           this.$store.state.userGroupName = name\r\n      }\r\n      \r\n  },\r\n  watch:{\r\n  },\r\n  computed: {\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.add {\r\n  color: #7808F7;\r\n  font-size:25px;\r\n}\r\n</style>"]}]}