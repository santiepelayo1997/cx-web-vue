{"remainingRequest":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\src\\views\\TaxRates.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\src\\views\\TaxRates.vue","mtime":1574848682582},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\css-loader\\index.js","mtime":1571017171576},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1571017172902},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1571017172796},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571017171362},{"path":"C:\\Users\\Santie\\Desktop\\CXWEBVUE\\cx-web-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1571017172902}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nbody{\r\n  overflow: hidden !important;\r\n}\r\n.add {\r\n  color: #7808F7;\r\n  font-size:25px;\r\n}\r\n#notS{\r\n  color: #0BBEBA;\r\n}\r\n#sku {\r\n  color: #0BBEBA;\r\n}\r\n#btnProductPrice{\r\n  color: #0BBEBA;\r\n  border-color: #0BBEBA;\r\n}\r\n#btnProductPrice:hover{\r\n  color:white;\r\n  background-color: #0BBEBA;\r\n}\r\n",{"version":3,"sources":["TaxRates.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TaxRates.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n     <Navigation/>\r\n     <div class=\"container-fluid\">\r\n             <div class=\"row\">\r\n                  <FormBuilder\r\n                  card-title=\"Create New Tax \"\r\n                  :card-button=\"cardButton\"\r\n                  card-size=\"modal-dialog modal-dialog-centered modal-lg\"\r\n                  :card-input=\"form\"\r\n                  v-if=\"showModal\" \r\n                  @closeModal=\"closeModal\"\r\n                  :btn-close=\"btnClose\"\r\n                  @saveItems=\"validation\"\r\n                  :loading=\"this.loadingSave\"\r\n                  :alert-custom=\"alertDanger\"\r\n                 />\r\n\r\n                <FormBuilder\r\n                  card-title=\"Update Tax \"\r\n                  :card-button=\"cardButtonUpdate\"\r\n                  card-size=\"modal-dialog modal-dialog-centered modal-lg\"\r\n                  :card-input=\"form\"\r\n                   v-if=\"showModalUpdate\" \r\n                  @closeModal=\"closeModal\"\r\n                  :btn-close=\"btnClose\"\r\n                  @updateItems=\"updateItem\"\r\n                  :loading=\"this.loading\"\r\n                  :alert-custom=\"alertDanger2\"\r\n                 />\r\n                   <div class=\"col-md-12\">\r\n                    <!-- START OF TABLE LIST  -->\r\n                        <template v-if=\"syncing == true\">\r\n                              <Loader \r\n                              api-model=\"paymentchannels\" \r\n                              @doneLoading=\"stopSync\" \r\n                              :indexed-filter=\"indexedFilter\"\r\n                              />\r\n                        </template>\r\n                        <template v-else>\r\n                              <TableList\r\n                              api-model=\"paymentchannels\"\r\n                              table-name=\"Tax Management\"\r\n                              :show-fields=\"showFields\"\r\n                              :indexed-filter=\"indexedFilter\"\r\n                              :icon-buttons=\"iconButtons\"\r\n                              :btn-add=\"btnAdd\"\r\n                              :icon-color=\"iconColor\"\r\n                              :show-alert= \"true\"\r\n                              :alert-custom=\"alertCustom\"\r\n                              @btnAddModal=\"openModal\"\r\n                              @deleteItem=\"deleteItem\"\r\n                              @openModalUpdate=\"openModalUpdate\"\r\n                             />\r\n                        </template>\r\n\r\n\r\n                   <!-- END OF TABLE LIST -->\r\n                   </div>\r\n                        <div class=\"col-md-4\">\r\n                       </div>\r\n                 </div>\r\n           </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport Navigation from '@/components/Navigation.vue'\r\nimport Sidebar from '@/components/Sidebar.vue'\r\nimport Loader from '@/components/Loader.vue'\r\nimport TableList from '@/components/TableList.vue'\r\nimport FormBuilder from '@/components/FormBuilder.vue'\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'taxes',\r\n  mounted () {\r\n    \r\n  },\r\n  data:\r\n    function() {\r\n        return{\r\n              syncing: true,\r\n              showModal: false,\r\n              showModalUpdate: false,\r\n              loading: false,\r\n              loadingSave: false,\r\n              warningMessage: '',\r\n              isValidPhoto: true,\r\n              tableName: \"paymentchannels\",\r\n              photoUrl: '',\r\n              file: '',\r\n              showFields: {\r\n                  \"orderBy\": \"updatedAt\",\r\n                  \"orientation\": \"desc\",\r\n                  \"list\": ['name','code']\r\n              },\r\n              iconButtons: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"fas fa-pen\",\r\n                  callName: \"openModalUpdate\",\r\n                  accepting: [\"hashId\"]\r\n                },\r\n                {  \r\n                  name: \"use3\",\r\n                  uiName: \"fas fa-times\",\r\n                  callName: \"deleteItem\",\r\n                  accepting: [\"hashId\"]\r\n                }\r\n              ],\r\n              btnClose: [\r\n                {\r\n                  name: \"btnClose\",\r\n                  uiName: \"Cancel\",\r\n                  callName: \"closeModal\",\r\n                }\r\n              ],\r\n              btnAdd:[{\r\n                name:\"btnAdd\",\r\n                callName: \"btnAddModal\"\r\n              }],\r\n              \r\n              cardButton: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"Create\",\r\n                  callName: \"saveItems\",\r\n                  className: \"btn btn-primary\"\r\n                }\r\n              ],\r\n             cardButtonUpdate: [\r\n                {\r\n                  name: \"use\",\r\n                  uiName: \"Save\",\r\n                  callName: \"updateItems\",\r\n                  className: \"btn btn-primary\"\r\n                }\r\n              ],\r\n              form: [\r\n                {\r\n                  name: \"name\",\r\n                  labelName: \"Name:\",\r\n                  inputId: \"name\",\r\n                  cardInputCol: \"col-md-6\",\r\n                  max: 31,\r\n                  requiredField: 'true',\r\n                  errorName: \"Please input Name\"\r\n                  \r\n                },\r\n                 {\r\n                  name: \"code\",\r\n                  labelName: \"Code:\",\r\n                  inputId: \"code\",\r\n                  cardInputCol: \"col-md-6\",\r\n                  max: 30,\r\n                  requiredField: 'true',\r\n                  errorName: \"Please input Code\"\r\n                  \r\n                }\r\n              ],\r\n              alertCustom:[{\r\n                  alertType: \"alert alert-success\",\r\n                  alertId: \"alertSuccess\",\r\n                  idLabelMessage: \"labelSuccess\"\r\n              }],\r\n              alertDanger:[{\r\n                  alertType: \"alert alert-danger\",\r\n                  alertId: \"alertDanger\",\r\n                  idLabelMessage: \"labelDanger\"\r\n              }],\r\n              alertDanger2:[{\r\n                  alertType: \"alert alert-danger\",\r\n                  alertId: \"alertDanger2\",\r\n                  idLabelMessage: \"labelDanger2\"\r\n              }],\r\n              iconColor: [\r\n                 {\r\n                     color: '#CBCBCB'\r\n                 }\r\n              ],\r\n            indexedFilter:  {\r\n              status: \"A\"\r\n            }\r\n        }\r\n    },\r\n  components: {\r\n      Navigation,\r\n      Loader,\r\n      FormBuilder,\r\n      Sidebar,\r\n      TableList\r\n  },\r\n  methods: {\r\n        stopSync: function () {\r\n            this.syncing = false\r\n        },\r\n        reSync: function(){\r\n            this.syncing = true;\r\n        },\r\n        closeModal: function(){\r\n          this.showModal = false\r\n          this.showModalUpdate = false\r\n        },\r\n        openModal: function (){\r\n          this.showModal = true\r\n        },\r\n        handleFileUpload(event){\r\n           this.file = event.target.files[0];\r\n        },\r\n        async openModalUpdate (hashId){\r\n            this.showModalUpdate = true\r\n\r\n            let token = await localStorage.getItem(\"apiToken\");\r\n            let apiDomain = await localStorage.getItem(\"apiDomain\");\r\n            localStorage.setItem('userHashUpdate', hashId)\r\n\r\n            let axiosConfig = {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \"+ token\r\n                }\r\n            };\r\n            let res = await axios.get(apiDomain + 'paymentchannels/' + hashId, axiosConfig)\r\n           .then((res) => {\r\n                  document.getElementById(\"name\").value = res.data.name\r\n                  document.getElementById(\"code\").value = res.data.code\r\n                 \r\n            })\r\n           .catch((err) => {\r\n              console.log(\"AXIOS ERROR: \", err);\r\n           })\r\n      },\r\n       validation: function(){\r\n         \r\n          const form = document.querySelector('form');\r\n          var txt = \"\";\r\n          for (var i = 0; i < form.length; i++) {\r\n              if(form.elements[i].value ==\"\"){\r\n                  form.elements[i].classList.add('is-invalid')\r\n                    this.loading = false\r\n                    this.loadingSave = false\r\n              }\r\n          }\r\n            this.saveItems();\r\n            this.loadingSave = true\r\n        \r\n       },\r\n      async updateItem(){\r\n              this.loading = true\r\n            \r\n              let token = await localStorage.getItem(\"apiToken\");\r\n              let hashId = await localStorage.getItem(\"userHashUpdate\");\r\n              let photoUrl;\r\n              let apiDomain = await localStorage.getItem(\"apiDomain\");\r\n              let formData = new FormData();\r\n\r\n\r\n                      let res = await axios({\r\n                        method: 'put',\r\n                        url: apiDomain + 'paymentchannels/' + hashId ,\r\n                        data: {\r\n                          name:  document.getElementById(\"name\").value,\r\n                          code:  document.getElementById(\"code\").value,\r\n                        },\r\n                        headers: {\r\n                            Authorization: 'Bearer ' + token\r\n                        }\r\n                    })\r\n                    .then((res) => {\r\n                        document.getElementById(\"alertSuccess\").style.display = \"\";\r\n                        document.getElementById('labelSuccess').innerHTML = \"Payment Channel has been succesfully updated!\"\r\n                        this.showModalUpdate = false;\r\n                        this.loading = false\r\n                     \r\n                    })\r\n                    .catch((err) => {\r\n                        this.loading = false\r\n                        document.getElementById(\"customAlert\").hidden=false;;\r\n                        document.getElementById(\"labelDanger2\").innerHTML =  err.response.data.error;\r\n                        console.log(\"AXIOS ERROR: \", err);\r\n                    })\r\n         \r\n\r\n             \r\n      },\r\n      async deleteItem(hashId){\r\n            let token = await localStorage.getItem(\"apiToken\");\r\n            let apiDomain = await localStorage.getItem(\"apiDomain\");\r\n            let res = await axios({\r\n                method: 'delete',\r\n                url: apiDomain + 'paymentchannels/' + hashId,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n            .then((res) => {\r\n                document.getElementById(\"alertSuccess\").style.display = \"\";\r\n                document.getElementById('labelSuccess').innerHTML = \"Payment Channel has been Deleted!\"\r\n                location.reload();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"AXIOS ERROR: \", err);\r\n            })\r\n      },\r\n      async saveItems(){\r\n            \r\n            let token = await localStorage.getItem(\"apiToken\");\r\n            let apiDomain = await localStorage.getItem(\"apiDomain\");\r\n            let modelName = await localStorage.getItem(\"currentModelPage\")\r\n            let domain = await localStorage.getItem(\"domain\");\r\n       \r\n\r\n            let  postData = {\r\n                  name:  document.getElementById(\"name\").value,\r\n                  code:  document.getElementById(\"code\").value,\r\n            }\r\n\r\n            let axiosConfig = {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \"+ token\r\n                }\r\n            };\r\n\r\n            let res = await axios.post(apiDomain + 'paymentchannels', postData, axiosConfig)\r\n              .then((res) => {\r\n                console.log(res)\r\n                  document.getElementById(\"alertSuccess\").style.display = \"\";\r\n                  document.getElementById('labelSuccess').innerHTML = \"Payment Channel has been successfully Saved!\"\r\n                  this.showModal = false\r\n                  this.loadingSave = false\r\n                  location.reload();\r\n                  //this.reSync();\r\n            })\r\n            .catch((err) => {\r\n              this.loadingSave = false\r\n              document.getElementById(\"customAlert\").hidden=false;\r\n              document.getElementById('labelDanger').innerHTML =  err.response.data.error;\r\n              console.log(\"AXIOS ERROR: \", err);\r\n            })\r\n          \r\n      },\r\n      refresh: async function() {\r\n            this.$root.$emit('Loader')\r\n      }\r\n  },\r\n  watch:{\r\n  },\r\n  computed: {\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\nbody{\r\n  overflow: hidden !important;\r\n}\r\n.add {\r\n  color: #7808F7;\r\n  font-size:25px;\r\n}\r\n#notS{\r\n  color: #0BBEBA;\r\n}\r\n#sku {\r\n  color: #0BBEBA;\r\n}\r\n#btnProductPrice{\r\n  color: #0BBEBA;\r\n  border-color: #0BBEBA;\r\n}\r\n#btnProductPrice:hover{\r\n  color:white;\r\n  background-color: #0BBEBA;\r\n}\r\n</style>"]}]}